{"version":3,"sources":["component/GithubItem.jsx","component/Tab.jsx","App.js","redux/reducer.js","api/index.js","api/ajax.js","redux/saga.js","redux/store.js","index.jsx"],"names":["GithubItem","ToGithubPage","window","location","href","props","htmlUrl","this","listNum","avatar","name","stargazersCount","forksCount","openIssuesCount","className","onClick","style","fontSize","padding","data-src","alt","width","margin","color","fontWeight","textAlign","marginRight","icon","faPeopleArrows","faStar","faGift","faWater","React","Component","TabCom","switchTab","e","url","target","btnStyle","setState","tabName","tabUrl","localStorage","setItem","getGitHubDataListAsync","state","tabList","githubData","count","filterOption","getItem","document","getElementById","querySelectorAll","forEach","btn","classList","remove","add","getAttribute","FetchGit","list","splice","paddingTop","display","marginTop","marginBottom","data-filter","id","map","index","key","length","item","owner","avatar_url","stargazers_count","forks_count","open_issues_count","html_url","Tab","connect","dispatch","type","App","gitHubList","action","data","getGitHubList","dataStr","Object","keys","substring","lastIndexOf","axios","get","post","ajax","take","put","call","res","items","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","ReactDOM","render"],"mappings":"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","file":"static/js/main.5d32f514.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faPeopleArrows,\r\n  faGift,\r\n  faStar,\r\n  faWater,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../style/GithubItem.css\";\r\n\r\nclass GithubItem extends React.Component {\r\n  ToGithubPage = () => {\r\n    window.location.href = this.props.htmlUrl;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      listNum,\r\n      avatar,\r\n      name,\r\n      stargazersCount,\r\n      forksCount,\r\n      openIssuesCount,\r\n    } = this.props;\r\n\r\n    const imgStyle = {\r\n      width: \"80%\",\r\n      margin: \"0 auto\",\r\n    };\r\n\r\n    const titleStyle = {\r\n      fontSize: \"25px\",\r\n      padding: \"15px 0\",\r\n    };\r\n\r\n    const nameStyle = {\r\n      color: \"indianred\",\r\n      fontWeight: \"500\",\r\n    };\r\n\r\n    const itemDetStyle = {\r\n      textAlign: \"left\",\r\n      margin: \"0 auto\",\r\n    };\r\n\r\n    const peopleStyle = {\r\n      color: \"orange\",\r\n      marginRight: \"9px\",\r\n    };\r\n    const starsStyle = {\r\n      color: \"#FFD700\",\r\n      marginRight: \"9px\",\r\n    };\r\n    const forksStyle = {\r\n      color: \"skyblue\",\r\n      marginRight: \"9px\",\r\n    };\r\n    const issuesStyle = {\r\n      color: \"#EDA1A7\",\r\n      marginRight: \"9px\",\r\n    };\r\n    return (\r\n      <div\r\n        className=\"github-item\"\r\n        onClick={this.ToGithubPage}\r\n      >\r\n        <span style={titleStyle}>#{listNum}</span>\r\n        <img data-src={avatar} alt=\"\" style={imgStyle} className=\"lazyload\"/>\r\n        <p style={nameStyle}>{name}</p>\r\n        <div style={itemDetStyle}>\r\n          <div>\r\n            <FontAwesomeIcon style={peopleStyle} icon={faPeopleArrows} />\r\n            <span style={{fontWeight:'500'}}>{name}</span>\r\n          </div>\r\n          <div>\r\n            <FontAwesomeIcon style={starsStyle} icon={faStar} />\r\n            <span>{stargazersCount}stars</span>\r\n          </div>\r\n          <div>\r\n            <FontAwesomeIcon style={forksStyle} icon={faGift} />\r\n            <span>{forksCount}forks</span>\r\n          </div>\r\n          <div>\r\n            <FontAwesomeIcon style={issuesStyle} icon={faWater} />\r\n            <span>{openIssuesCount}openissues</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GithubItem;\r\n","import React from \"react\";\r\nimport GithubItem from \"./GithubItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../style/Tab.css\";\r\n\r\nclass TabCom extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabList: [\r\n        {\r\n          name: \"java\",\r\n          url:\r\n            \"q=stars:%3E11+language:java&sort=stars&order=desc&type=Repositories\",\r\n        },\r\n        {\r\n          name: \"javascript\",\r\n          url:\r\n            \"q=stars:%3E11+language:javascript&sort=stars&order=desc&type=Repositories\",\r\n        },\r\n        {\r\n          name: \"css\",\r\n          url:\r\n            \"q=stars:%3E11+language:css&sort=stars&order=desc&type=Repositories\",\r\n        },\r\n        {\r\n          name: \"ruby\",\r\n          url:\r\n            \"q=stars:%3E1+language:ruby&sort=stars&order=desc&type=Repositories\",\r\n        },\r\n        {\r\n          name: \"python\",\r\n          url:\r\n            \"q=stars:%3E1+language:python&sort=stars&order=desc&type=Repositories\",\r\n        },\r\n      ],\r\n      tabName: \"All\",\r\n      tabUrl: \"q=stars:%3E11&sort=stars&order=desc&type=Repositories\",\r\n      url: \"https://api.github.com/search/repositories?\",\r\n      githubData: [],\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n\r\n  //根据按钮名字动态添加样式\r\n  btnStyle(target = null) {\r\n    let filterOption = null;\r\n    if (target === null) {\r\n      let name = localStorage.getItem(\"name\") ? localStorage.getItem(\"name\"):\"All\"\r\n      filterOption = document.getElementById(name);\r\n      if (filterOption) {\r\n        document\r\n          .querySelectorAll(\".tab-list.active\")\r\n          .forEach((btn) => btn.classList.remove(\"active\"));\r\n        filterOption.classList.add(\"active\");\r\n      }\r\n    } else {\r\n      filterOption = target.getAttribute(\"data-filter\");\r\n      if (filterOption) {\r\n        document\r\n          .querySelectorAll(\".tab-list.active\")\r\n          .forEach((btn) => btn.classList.remove(\"active\"));\r\n        target.classList.add(\"active\");\r\n      }\r\n    }\r\n  }\r\n\r\n  //切换按钮动画\r\n  switchTab = (e, { name, url }) => {\r\n    let { target } = e;\r\n    this.btnStyle(target)\r\n    this.setState({\r\n      tabName: name,\r\n      tabUrl: url,\r\n    });\r\n    //保存状态到本地存储\r\n    localStorage.setItem(\"name\", name);\r\n    localStorage.setItem(\"url\", url);\r\n    //调用saga方法\r\n    this.props.getGitHubDataListAsync(\"setGitHubDataListSaga\", url);\r\n  };\r\n\r\n  //刷新获取旧数据\r\n   FetchGit() {\r\n    this.setState({\r\n      githubData: [],\r\n    });\r\n    //刷新次数为一表示页面冲刷\r\n    if (this.state.count === 0) {\r\n      //判断本地存储\r\n      const name = localStorage.getItem(\"name\");\r\n      if (name) {\r\n        this.props.getGitHubDataListAsync(\r\n          \"setGitHubDataListSaga\",\r\n          localStorage.getItem(\"url\")\r\n        );\r\n\r\n        this.setState({\r\n          count: this.state.count + 1,\r\n          name: localStorage.getItem(\"name\"),\r\n          tabUrl: localStorage.getItem(\"url\"),\r\n        });\r\n        this.btnStyle();\r\n      } else {\r\n        this.props.getGitHubDataListAsync(\r\n          \"setGitHubDataListSaga\",\r\n          this.state.tabUrl\r\n        );\r\n        this.btnStyle()\r\n      }\r\n    } else {\r\n      this.props.getGitHubDataListAsync(\r\n        \"setGitHubDataListSaga\",\r\n        this.state.tabUrl\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.FetchGit();\r\n  }\r\n\r\n  render() {\r\n    const githubData = this.props.list.splice(0,10);\r\n    const tabStyle = {\r\n      marginTop: \"14px\",\r\n      marginBottom: \"18px\",\r\n      width: \"100vw\",\r\n    };\r\n    const titleStyle = {\r\n      fontSize: \"25px\",\r\n      fontWeight: \"500\",\r\n      paddingTop: \"20px\",\r\n      display: \"block\",\r\n      width: \"100vw\",\r\n    };\r\n    return (\r\n      <div>\r\n        <span style={titleStyle}>Github热门项目</span>\r\n        <div style={tabStyle}>\r\n          <button\r\n            className=\"tab-list\"\r\n            data-filter=\"All\"\r\n            id=\"All\"\r\n            onClick={(e) =>\r\n              this.switchTab(e, {\r\n                name: \"All\",\r\n                url: \"q=stars:%3E11&sort=stars&order=desc&type=Repositories\",\r\n              })\r\n            }\r\n          >\r\n            All\r\n          </button>\r\n          {this.state.tabList.map((list, index) => {\r\n            return (\r\n              <button\r\n                key={index}\r\n                className=\"tab-list\"\r\n                data-filter={list.name}\r\n                id={list.name}\r\n                onClick={(e) => this.switchTab(e, list)}\r\n              >\r\n                {list.name}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"list-content\">\r\n          {githubData.length > 0 ? (\r\n            githubData.map((item, index) => {\r\n              return (\r\n                <GithubItem\r\n                  key={index}\r\n                  listNum={++index}\r\n                  avatar={item.owner.avatar_url}\r\n                  name={item.name}\r\n                  stargazersCount={item.stargazers_count}\r\n                  forksCount={item.forks_count}\r\n                  openIssuesCount={item.open_issues_count}\r\n                  htmlUrl={item.html_url}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div>刷新中...</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGitHubDataListAsync: (type, url) => dispatch({ type, url }),\r\n  };\r\n};\r\nconst Tab = connect(mapStateToProps, mapDispatchToProps)(TabCom);\r\nexport default Tab;\r\n","import React from 'react';\nimport Tab from './component/Tab';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tab/>\n    </div>\n  );\n}\n\nexport default App;\n","\r\n//处理状态\r\nconst gitHubList = (state={list:[]},action) =>{\r\n    switch(action.type){\r\n        case \"getList\":            \r\n            state.list = [...state.list,...action.data]\r\n            return {...state}\r\n        case \"clearList\":\r\n            state.list = []\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport default gitHubList","import ajax from \"./ajax\";\r\nlet url = \"https://api.github.com/search/repositories?\";\r\nexport const getGitHubList = (tabUrl) => ajax(url + tabUrl);\r\n","import axios from \"axios\";\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  if (type === \"GET\") {\r\n    //准 备 url query参 数 数 据\r\n    let dataStr = \"\"; // 数 据 拼 接 字 符 串\r\n    Object.keys(data).forEach((key) => {\r\n      dataStr += key + \"=\" + data[key] + \"&\";\r\n    });\r\n    if (dataStr !== \"\") {\r\n      dataStr = dataStr.substring(0, dataStr.lastIndexOf(\"&\"));\r\n      url = url + \"?\" + dataStr;\r\n    }\r\n    return axios.get(url);\r\n  } else {\r\n    return axios.post(url, data);\r\n  }\r\n}\r\n","import { call, put, take } from 'redux-saga/effects'\r\nimport {getGitHubList} from \"../api/index\"\r\n\r\n//获取数据的action\r\nconst setGitHubDataList = (data) =>({\r\n    type:\"getList\",\r\n    data\r\n})\r\n\r\nconst clearGitHubDataList = () =>({\r\n    type:\"clearList\"\r\n})\r\n\r\nfunction *getGitHubDataListAsync(){\r\n    while(true){\r\n        const action = yield take('setGitHubDataListSaga');\r\n        yield put(clearGitHubDataList())\r\n        const res = yield call(()=>getGitHubList(action.url))\r\n        yield put(setGitHubDataList(res.data.items))\r\n    }\r\n}\r\n\r\nexport default getGitHubDataListAsync","import reducer from \"./reducer\"\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {createStore,applyMiddleware} from \"redux\"\r\nimport getGitHubDataListAsync from \"../redux/saga\"\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(getGitHubDataListAsync);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\"\n\n\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/store\"\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}